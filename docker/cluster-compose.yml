services:
  node0:
    image: falkordb/falkordb:edge
    container_name: node0
    hostname: node0
    ports:
      - 17000:17000
    networks:
      - falkordb-cluster
    entrypoint: /bin/bash
    healthcheck:
      test: |
        redis-cli -h node0 -p 17000 ping || {echo "Redis is not ready"; exit 1}
      interval: 30s
      timeout: 10s
      retries: 5
    command:
      - -c
      - |
        touch /data/node.conf
        echo "port 17000" >> /data/node.conf
        echo "loadmodule /var/lib/falkordb/bin/falkordb.so"         >> /data/node.conf
        echo "cluster-preferred-endpoint-type hostname"             >> /data/node.conf
        echo "cluster-port 16379"                                   >> /data/node.conf
        echo "cluster-enabled yes"                                  >> /data/node.conf
        echo "cluster-config-file /data/nodes.conf"                 >> /data/node.conf
        echo "cluster-node-timeout 5000"                            >> /data/node.conf
        echo "cluster-announce-hostname node0"                      >> /data/node.conf
        echo "cluster-announce-ip node0"                            >> /data/node.conf
        echo "cluster-announce-port 17000"                          >> /data/node.conf
        redis-server /data/node.conf
  node1:
    image: falkordb/falkordb:edge
    container_name: node1
    hostname: node1
    ports:
      - 17001:17001
    networks:
      - falkordb-cluster
    entrypoint: /bin/bash
    healthcheck:
      test: |
        redis-cli -h node1 -p 17001 ping || {echo "Redis is not ready"; exit 1}
      interval: 30s
      timeout: 10s
      retries: 5
    command:
      - -c
      - |
        touch /data/node.conf
        echo "port 17001" >> /data/node.conf
        echo "loadmodule /var/lib/falkordb/bin/falkordb.so"         >> /data/node.conf
        echo "cluster-preferred-endpoint-type hostname"             >> /data/node.conf
        echo "cluster-port 16379"                                   >> /data/node.conf
        echo "cluster-enabled yes"                                  >> /data/node.conf
        echo "cluster-config-file /data/nodes.conf"                 >> /data/node.conf
        echo "cluster-node-timeout 5000"                            >> /data/node.conf
        echo "cluster-announce-hostname node1"                      >> /data/node.conf
        echo "cluster-announce-ip node1"                            >> /data/node.conf
        echo "cluster-announce-port 17001"                          >> /data/node.conf
        redis-server /data/node.conf
  node2:
    image: falkordb/falkordb:edge
    container_name: node2
    hostname: node2
    ports:
      - 17002:17002
    networks:
      - falkordb-cluster
    entrypoint: /bin/bash
    healthcheck:
      test: |
        redis-cli -h node2 -p 17002 ping || {echo "Redis is not ready"; exit 1}
      interval: 30s
      timeout: 10s
      retries: 5
    command:
      - -c
      - |
        touch /data/node.conf
        echo "port 17002" >> /data/node.conf
        echo "loadmodule /var/lib/falkordb/bin/falkordb.so"        >> /data/node.conf
        echo "cluster-preferred-endpoint-type hostname"            >> /data/node.conf
        echo "cluster-port 16379"                                  >> /data/node.conf
        echo "cluster-enabled yes"                                 >> /data/node.conf
        echo "cluster-config-file /data/nodes.conf"                >> /data/node.conf
        echo "cluster-node-timeout 5000"                           >> /data/node.conf
        echo "cluster-announce-hostname node2"                     >> /data/node.conf
        echo "cluster-announce-ip node2"                           >> /data/node.conf
        echo "cluster-announce-port 17002"                         >> /data/node.conf
        redis-server /data/node.conf
  node3:
    image: falkordb/falkordb:edge
    container_name: node3
    hostname: node3
    ports:
      - 17003:17003
    networks:
      - falkordb-cluster
    entrypoint: /bin/bash
    healthcheck:
      test: |
        redis-cli -h node3 -p 17003 ping || {echo "Redis is not ready"; exit 1}
      interval: 30s
      timeout: 10s
      retries: 5
    command:
      - -c
      - |
        touch /data/node.conf
        echo "port 17003" >> /data/node.conf
        echo "loadmodule /var/lib/falkordb/bin/falkordb.so"       >> /data/node.conf
        echo "cluster-preferred-endpoint-type hostname"           >> /data/node.conf
        echo "cluster-port 16379"                                 >> /data/node.conf
        echo "cluster-enabled yes"                                >> /data/node.conf
        echo "cluster-config-file /data/nodes.conf"               >> /data/node.conf
        echo "cluster-node-timeout 5000"                          >> /data/node.conf
        echo "cluster-announce-hostname node3"                    >> /data/node.conf
        echo "cluster-announce-ip node3"                          >> /data/node.conf
        echo "cluster-announce-port 17003"                        >> /data/node.conf
        redis-server /data/node.conf
  node4:
    image: falkordb/falkordb:edge
    container_name: node4
    hostname: node4
    ports:
      - 17004:17004
    networks:
      - falkordb-cluster
    entrypoint: /bin/bash
    healthcheck:
      test: |
        redis-cli -h node4 -p 17004 ping || {echo "Redis is not ready"; exit 1}
      interval: 30s
      timeout: 10s
      retries: 5
    command:
      - -c
      - |
        touch /data/node.conf
        echo "port 17004" >> /data/node.conf
        echo "loadmodule /var/lib/falkordb/bin/falkordb.so"     >> /data/node.conf
        echo "cluster-preferred-endpoint-type hostname"         >> /data/node.conf
        echo "cluster-port 16379"                               >> /data/node.conf
        echo "cluster-enabled yes"                              >> /data/node.conf
        echo "cluster-config-file /data/nodes.conf"             >> /data/node.conf
        echo "cluster-node-timeout 5000"                        >> /data/node.conf
        echo "cluster-announce-hostname node4"                  >> /data/node.conf
        echo "cluster-announce-ip node4"                        >> /data/node.conf
        echo "cluster-announce-port 17004"                      >> /data/node.conf
        redis-server /data/node.conf

  node5:
    image: falkordb/falkordb:edge
    container_name: node5
    hostname: node5
    ports:
      - 17005:17005
    networks:
      - falkordb-cluster
    entrypoint: /bin/bash
    healthcheck:
      test: |
        redis-cli -h node5 -p 17005 ping || {echo "Redis is not ready"; exit 1}
      interval: 30s
      timeout: 10s
      retries: 5
    command:
      - -c
      - |
        touch /data/node.conf
        echo "port 17005" >> /data/node.conf
        echo "loadmodule /var/lib/falkordb/bin/falkordb.so"   >> /data/node.conf
        echo "cluster-preferred-endpoint-type hostname"       >> /data/node.conf
        echo "cluster-port 16379"                             >> /data/node.conf
        echo "cluster-enabled yes"                            >> /data/node.conf
        echo "cluster-config-file /data/nodes.conf"           >> /data/node.conf
        echo "cluster-node-timeout 5000"                      >> /data/node.conf
        echo "cluster-announce-hostname node5"                >> /data/node.conf
        echo "cluster-announce-ip node5"                      >> /data/node.conf
        echo "cluster-announce-port 17005"                    >> /data/node.conf
        redis-server /data/node.conf
  cluster-creator:
    image: falkordb/falkordb:edge
    container_name: cluster-creator
    hostname: cluster-creator
    depends_on:
      - node0
      - node1
      - node2
      - node3
      - node4
      - node5
    networks:
      - falkordb-cluster
    entrypoint: /bin/bash
    command:
      - -c
      - |
        sleep 15
        redis-cli --cluster create node0:17000 node1:17001 node2:17002 node3:17003 node4:17004 node5:17005 --cluster-replicas 1 --cluster-yes || { echo failed; exit 1; }
        echo "Cluster creation completed successfully"

networks:
  falkordb-cluster: